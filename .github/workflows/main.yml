

name: Deploy projeto no dockerhub / integracao com aws

on:
  push:
    branches: 
      - production

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout backend
              uses: actions/checkout@v3
            - name: Cache Maven packages
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                  ${{ runner.os }}-maven-
            - name: Setup Java
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '8'
            - name: Build backend
              working-directory: backend/
              run: mvn clean install
            - name: Docker Login
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                username: ${{ secrets.DOCKER_LOGIN }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Build and push Docker image backend
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                context: backend/
                push: true
                cache-from: type=registry,ref=timbeck1997/finnanceapp:cache
                cache-to: type=registry,ref=timbeck1997/finnanceapp:cache,mode=max
                tags: timbeck1997/finnanceapp:latest, timbeck1997/finnanceapp:${{ github.run_number }}
            - name: Setup Node.js
              uses: actions/setup-node@v1
              with:
                node-version: 16.14
            - name: Cache npm packages
              uses: actions/cache@v3
              with:
                path: frontend/node_modules
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-
            - name: Install dependencies
              working-directory: frontend/
              run: npm install
            - name: Build frontend
              working-directory: frontend/
              run: npm run build
            - name: Build and push Docker image FRONTEND
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                context: frontend/
                push: true
                cache-from: type=registry,ref=timbeck1997/finnance-app-front:cache
                cache-to: type=registry,ref=timbeck1997/finnance-app-front:cache,mode=max
                tags: timbeck1997/finnance-app-front:latest, timbeck1997/finnance-app-front:${{ github.run_number }}

    deploy:
        needs: build
        runs-on: self-hosted
        steps:
            - name: BACKEND - PULL IMAGE FROM DOCKERHUB
              run: docker pull timbeck1997/finnanceapp:latest
            - name: BACKEND - Remove docker container
              run: docker container rm -f finnanceapp
            - name: BACKEND - Run docker container
              run: docker run -d -p 8080:8080 -e DATABASE_USERNAME=${{secrets.DATABASE_USERNAME}} --network=appnetwork -e DATABASE_PASSWORD='${{secrets.DATABASE_PASSWORD}}' -e DATABASE_URL=${{secrets.DATABASE_URL}} -e SPRING_PROFILES_ACTIVE=prod   --name finnanceapp timbeck1997/finnanceapp
            
            - name: FRONT - PULL IMAGE FROM DOCKERHUB
              run: docker pull timbeck1997/finnance-app-front:latest
            - name: FRONT - Remove docker container
              run: docker container rm -f finnance-app-front
            - name: FRONT - Run docker container
              run: docker run -d -p 80:80  --network=appnetwork -e NETWORKNAME=appnetwork -v /opt/nginx:/etc/nginx/conf.d/  --name finnance-app-front timbeck1997/finnance-app-front
            - name: Docker system prune
              run: docker system prune -af
     
